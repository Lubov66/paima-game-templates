## CHAIN DATA
# Example: "https://rpc-devnet-cardano-evm.c1.milkomeda.com"
CHAIN_URI="http://localhost:8545"
# Example: "https://explorer-devnet-cardano-evm.c1.milkomeda.com" 
CHAIN_EXPLORER_URI=""
# Example: "Milkomeda C1 Testnet" 
CHAIN_NAME="Hardhat"
# Example: "200101" 
CHAIN_ID="31337"
# Example: "Milkomeda Test Ada"
CHAIN_CURRENCY_NAME="Test Hardhat Tokens"
# Note: The shorthand currency name/sybol shown in the user's wallet
# Example: "mtADA"
CHAIN_CURRENCY_SYMBOL="TEST"
# Note: The number of decimals of the native/gas asset of the chain
# Example: "18" 
CHAIN_CURRENCY_DECIMALS="18"
# Note: This is in seconds as a float
# Example: "2.0" 
BLOCK_TIME="2"

## CONTRACT DEPLOYMENT
# Example: "0xA02F7744868945A346Ee6994068F54D039683445"
CONTRACT_ADDRESS="0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0" # fill with result of npm run chain:deploy
# Note: This is the block height to start syncing from; usually the contract deployment block height
# Example: "9000000"
START_BLOCKHEIGHT="0"


## Middleware
# Note: This is the URL which your middleware will use to interact with your game node webserver
# Example: "http://localhost:3333"
BACKEND_URI="http://localhost:3333"


## MISC
# Note: This is the port your game node webserver will use
# Example: "3333"
WEBSERVER_PORT="3333"
# Note: This enables running your game node with just the webserver running, meaning no new blocks will be synced.
# This is primarily useful for development, devops, or testing other edge cases where you want to interact with
# the game node but not have the game state progress forward.
SERVER_ONLY_MODE="false"

## DATABASE
DB_NAME="postgres"
DB_USER="postgres"
DB_PW="postgres"
DB_HOST="localhost"
DB_PORT="5432"

## Batcher setup
# BATCHER DB connection:
BATCHER_DB_HOST="paima-batcher-db"
BATCHER_DB_USER="postgres"
BATCHER_DB_PW="postgres"
BATCHER_DB_NAME="postgres"
BATCHER_DB_PORT="5532"

# Batcher Contract:
DEFAULT_FEE="10000000000000000"

# Batcher Webserver:
BATCHER_PORT="3340"

# Batcher Validation parameters:
GAME_NODE_URI="http://localhost:3333"
DEFAULT_VALIDATION_ACTIVE="false"
GAME_INPUT_VALIDATOR_PERIOD="1000"
BATCHED_TRANSACTION_POSTER_PERIOD="3000"
BATCHED_MESSAGE_SIZE_LIMIT="100000"
MAX_USER_INPUTS_PER_MINUTE="10"
MAX_USER_INPUTS_PER_DAY="500"

# Batcher wallet
BATCHER_PRIVATE_KEY="0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80" # hardhat local node key


## Account nft contract
# The name of the Account NFT contract (must match extensions.yml)
# Example: "Account NFT"
NFT_NAME="Account NFT"
# AnnotatedMintNft contract address
# Example: "0x9373764E38DCbC035B8FE2281Cb8c3C9C34F284C"
NFT="0x5FbDB2315678afecb367f032d93F642f64180aa3"
# Native proxy contract address
# Example: "0x5DB063dAA112735148518977f632E2b50DbeC3c0"
NATIVE_PROXY="0xa513E6E4b8f2a923D98304ec87F64353C4D5C853" # NFT sale: 0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512

## Trade nft contract
# The name of the Card Trade NFT contract mint entry form extensions.yml
# Example: "Trade NFT mint"
CARD_TRADE_NFT_NAME="Trade NFT mint"
# Card pack nft contract address
# Example: 0x85e2849490c29A9863e4aBdB222B5D1f5FD1609b
CARD_TRADE_NFT="0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9"
# Card pack native proxy contract address
# Example: 0xa8437C048B9fa162C5C59a1eA1480E48814533B9
CARD_TRADE_NATIVE_PROXY="0x610178dA211FEF7D417bC0e6FeD39F05609AD788" # NFT sale: 0x5FC8d32690cc91D4c39d9d3abcBD16989F875707
# Price of a card pack in default denomination (e.g. in ETH)
# Example: 0.047 (don't use quotes)
CARD_PACK_NFT_PRICE_DEFAULT_DENOMINATION=0.03

## Generic payment contract
# Generic payment contract address
# Example: 0x66E0E36bc1B443662B6b23dD05407c3dD6D151ea
GENERIC_PAYMENT="0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9"
# Generic payment proxy contract address
# Example: 0x175e451823B999a657Ef5F2060115a381b8eceDA
GENERIC_PAYMENT_PROXY="0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6"
